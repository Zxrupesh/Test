
-- Create UI
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local ToggleButton = Instance.new("TextButton")
local Status = Instance.new("TextLabel")

-- UI Properties
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.5, -100, 0.2, 0)
Frame.Size = UDim2.new(0, 200, 0, 120)

Title.Parent = Frame
Title.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Title.BorderSizePixel = 0
Title.Size = UDim2.new(0, 200, 0, 30)
Title.Font = Enum.Font.SourceSansBold
Title.Text = "War Machines Exploit"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 14

ToggleButton.Parent = Frame
ToggleButton.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
ToggleButton.BorderSizePixel = 0
ToggleButton.Position = UDim2.new(0, 20, 0, 40)
ToggleButton.Size = UDim2.new(0, 160, 0, 30)
ToggleButton.Font = Enum.Font.SourceSans
ToggleButton.Text = "Start Script"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 14

Status.Parent = Frame
Status.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Status.BorderSizePixel = 0
Status.Position = UDim2.new(0, 20, 0, 80)
Status.Size = UDim2.new(0, 160, 0, 20)
Status.Font = Enum.Font.SourceSans
Status.Text = "Status: Stopped"
Status.TextColor3 = Color3.fromRGB(255, 255, 255)
Status.TextSize = 14

-- Make frame draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Initialize global variables
getgenv().WarMachinesExecuted = getgenv().WarMachinesExecuted or false
getgenv().TweenTeleportTakenTime = 0.5
getgenv().Return = false
getgenv().AutoCooldown = true

-- Update UI based on current state
if getgenv().WarMachinesExecuted then
    ToggleButton.Text = "Stop Script"
    Status.Text = "Status: Running"
else
    ToggleButton.Text = "Start Script"
    Status.Text = "Status: Stopped"
end

-- Main script function (without the toggle at the beginning)
local function runWarMachinesScript()
    local plr = game.Players.LocalPlayer
    
    if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then return end
    
    plr.Character.HumanoidRootPart.CFrame = CFrame.new(500, 700, 265)
    task.wait(0.1)
    game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.Space, false, game)
    task.wait(0.1)
    game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.Space, false, game)
    task.wait(0.1)
    game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.Space, false, game)
    task.wait(0.1)
    game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.Space, false, game)
    task.wait(0.1)
    game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
    task.wait(0.0001)
    game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
    
    getgenv().PlrVelocity = Instance.new("BodyVelocity")
    getgenv().PlrVelocity.Parent = game.Workspace.Characters[plr.Name].LowerTorso
    getgenv().PlrVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    
    local Loops = 0
    local Direction = 1
    
    while true do
        if not getgenv().WarMachinesExecuted then
            break
        end
        
        if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then
            break
        end
        
        Loops = Loops + 1
        if Loops == 40 and getgenv().Return == true then
            Direction = Direction * -1
            Loops = 0
        else
            getgenv().PlrVelocity.Velocity = Vector3.new(0, 1250 * Direction, 0)
            task.wait(0.5)
        end
        
        getgenv().PlrVelocity.Velocity = Vector3.new(0,100,0)
        
        if plr.Character:GetAttribute("Overheat") ~= nil then
            if getgenv().AutoCooldown and plr.Character:GetAttribute("Overheat") >= 900 then
                repeat
                    plr.Character.HumanoidRootPart.CFrame = CFrame.new(-830.82, 285, -509.22)
                    if plr.PlayerGui.Client.SideBar.Visible == true and plr.PlayerGui.Hotbar.Enabled == true then
                        game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.Space, false, game)
                        task.wait(0.1)
                        game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.Space, false, game)
                        task.wait(0.1)
                        if plr.PlayerGui.Client.SideBar.Visible == true and plr.PlayerGui.Hotbar.Enabled == true then
                            game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
                            task.wait(0.0001)
                            game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
                            task.wait(0.1)
                            if plr.PlayerGui.Client.SideBar.Visible == true and plr.PlayerGui.Hotbar.Enabled == true then
                                game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.Space, false, game)
                                task.wait(0.1)
                                game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.Space, false, game)
                                task.wait(0.1)
                                game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
                                task.wait(0.0001)
                                game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
                                task.wait(0.1)
                            end
                        end
                    end
                    task.wait(0.01)
                until plr.Character:GetAttribute("Overheat") <= 50 or not getgenv().WarMachinesExecuted
            end
        end
        
        if plr.PlayerGui.Client.SideBar.Visible == true and plr.PlayerGui.Hotbar.Enabled == true then
            game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.Space, false, game)
            task.wait(0.1)
            game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.Space, false, game)
            task.wait(0.1)
            if plr.PlayerGui.Client.SideBar.Visible == true and plr.PlayerGui.Hotbar.Enabled == true then
                game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
                task.wait(0.0001)
                game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
                task.wait(0.1)
                if plr.PlayerGui.Client.SideBar.Visible == true and plr.PlayerGui.Hotbar.Enabled == true then
                    game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.Space, false, game)
                    task.wait(0.1)
                    game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.Space, false, game)
                    task.wait(0.1)
                    game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.LeftShift, false, game)
                    task.wait(0.0001)
                    game:GetService('VirtualInputManager'):SendKeyEvent(false, Enum.KeyCode.LeftShift, false, game)
                end
            end
        end
    end
end

-- Shutdown function
local function stopWarMachinesScript()
    local plr = game.Players.LocalPlayer
    
    if getgenv().PlrVelocity then
        getgenv().PlrVelocity.Velocity = Vector3.new(0,0,0)
        if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            game:GetService("TweenService"):Create(plr.Character.HumanoidRootPart, TweenInfo.new(getgenv().TweenTeleportTakenTime), {CFrame = CFrame.new(500, 700, 265)}):Play()
            task.wait(getgenv().TweenTeleportTakenTime)
            getgenv().PlrVelocity:Destroy()
            plr.Character.HumanoidRootPart.Velocity = Vector3.new(0,-10,0)
            task.wait(.25)
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(500, 640, 265)
        end
    end
end

-- Button click handler
ToggleButton.MouseButton1Click:Connect(function()
    getgenv().WarMachinesExecuted = not getgenv().WarMachinesExecuted
    
    if getgenv().WarMachinesExecuted then
        ToggleButton.Text = "Stop Script"
        Status.Text = "Status: Running"
        spawn(runWarMachinesScript) -- Run in separate thread
    else
        ToggleButton.Text = "Start Script"
        Status.Text = "Status: Stopped"
        stopWarMachinesScript()
    end
end)
